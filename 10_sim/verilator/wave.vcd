$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module $rootio $end
 $upscope $end
 $scope module D_stage_tb $end
  $var wire 5 # i_debug_addr [4:0] $end
  $var wire 32 E! o_debug_data [31:0] $end
  $var wire 32 $ mask_o_debug_data [31:0] $end
  $var wire 1 F! clk $end
  $var wire 1 % rst $end
  $var wire 32 & InstrF [31:0] $end
  $var wire 32 ' pcF [31:0] $end
  $var wire 32 ( PCPlus4F [31:0] $end
  $var wire 1 ) StallD $end
  $var wire 1 * FlushD $end
  $var wire 1 + ZeroE $end
  $var wire 1 , BranchE $end
  $var wire 1 - JumpE $end
  $var wire 1 . ALUResultEb0 $end
  $var wire 1 / RegWriteW $end
  $var wire 5 0 RdW [4:0] $end
  $var wire 32 1 ResultW [31:0] $end
  $var wire 32 2 mask_Read1D [31:0] $end
  $var wire 32 3 mask_Read2D [31:0] $end
  $var wire 2 4 mask_ResultSrcD [1:0] $end
  $var wire 4 5 mask_ALUControlD [3:0] $end
  $var wire 2 6 mask_ALUSrcD [1:0] $end
  $var wire 5 7 mask_Rs1D [4:0] $end
  $var wire 5 8 mask_Rs2D [4:0] $end
  $var wire 5 9 mask_RdD [4:0] $end
  $var wire 32 : mask_ImmExtD [31:0] $end
  $var wire 5 ; mask_MemSrcD [4:0] $end
  $var wire 32 &! InstrD [31:0] $end
  $var wire 7 I! opD [6:0] $end
  $var wire 3 J! funct3D [2:0] $end
  $var wire 1 K! funct7Db5 $end
  $var wire 12 L! funct12D [11:0] $end
  $var wire 3 '! ImmSrcD [2:0] $end
  $var wire 5 (! MemSrcD [4:0] $end
  $var wire 1 G! PCSrcE $end
  $var wire 32 c Read1D [31:0] $end
  $var wire 32 d Read2D [31:0] $end
  $var wire 1 )! RegWriteD $end
  $var wire 2 *! ResultSrcD [1:0] $end
  $var wire 1 +! MemWriteD $end
  $var wire 1 ,! JumpD $end
  $var wire 1 -! BranchD $end
  $var wire 4 .! ALUControlD [3:0] $end
  $var wire 2 /! ALUSrcD [1:0] $end
  $var wire 32 0! pcD [31:0] $end
  $var wire 32 1! PCPlus4D [31:0] $end
  $var wire 5 2! Rs1D [4:0] $end
  $var wire 5 3! Rs2D [4:0] $end
  $var wire 5 4! RdD [4:0] $end
  $var wire 32 5! ImmExtD [31:0] $end
  $var wire 1 6! Ecall $end
  $var wire 1 7! Ebreak $end
  $var wire 32 < test_num [31:0] $end
  $var wire 32 = pass_count [31:0] $end
  $var wire 32 > fail_count [31:0] $end
  $scope module Dreg $end
   $var wire 32 M! WIDTH [31:0] $end
   $var wire 1 F! clk $end
   $var wire 1 % rst $end
   $var wire 1 ? en $end
   $var wire 1 * clr $end
   $var wire 96 @ d [95:0] $end
   $var wire 96 8! q [95:0] $end
  $upscope $end
  $scope module ctrl $end
   $var wire 7 ;! opD [6:0] $end
   $var wire 3 <! funct3D [2:0] $end
   $var wire 1 =! funct7Db5 $end
   $var wire 12 >! funct12D [11:0] $end
   $var wire 1 + ZeroE $end
   $var wire 1 , BranchE $end
   $var wire 1 - JumpE $end
   $var wire 1 . ALUResultEb0 $end
   $var wire 1 )! RegWriteD $end
   $var wire 1 +! MemWriteD $end
   $var wire 1 ,! JumpD $end
   $var wire 1 -! BranchD $end
   $var wire 4 .! ALUControlD [3:0] $end
   $var wire 2 *! ResultSrcD [1:0] $end
   $var wire 2 /! ALUSrcD [1:0] $end
   $var wire 3 '! ImmSrcD [2:0] $end
   $var wire 5 (! MemSrcD [4:0] $end
   $var wire 1 G! PCSrcE $end
   $var wire 1 6! Ecall $end
   $var wire 1 7! Ebreak $end
   $var wire 2 ?! ALUOp [1:0] $end
   $scope module ad $end
    $var wire 1 @! opDb5 $end
    $var wire 3 <! funct3D [2:0] $end
    $var wire 1 =! funct7Db5 $end
    $var wire 2 ?! ALUOp [1:0] $end
    $var wire 1 A! ALUSrcDb1 $end
    $var wire 4 .! ALUControlD [3:0] $end
    $var wire 1 B! RtypeSub $end
   $upscope $end
   $scope module bd $end
    $var wire 3 <! funct3D [2:0] $end
    $var wire 1 + ZeroE $end
    $var wire 1 , BranchE $end
    $var wire 1 - JumpE $end
    $var wire 1 . ALUResultEb0 $end
    $var wire 1 G! PCSrcE $end
   $upscope $end
   $scope module md $end
    $var wire 7 ;! opD [6:0] $end
    $var wire 1 )! RegWriteD $end
    $var wire 1 ,! JumpD $end
    $var wire 1 -! BranchD $end
    $var wire 1 +! MemWriteD $end
    $var wire 2 *! ResultSrcD [1:0] $end
    $var wire 2 /! ALUSrcD [1:0] $end
    $var wire 3 '! ImmSrcD [2:0] $end
    $var wire 2 ?! ALUOp [1:0] $end
    $var wire 13 C! controls [12:0] $end
   $upscope $end
   $scope module memd $end
    $var wire 3 <! funct3D [2:0] $end
    $var wire 5 (! MemSrcD [4:0] $end
    $scope module memmux $end
     $var wire 32 N! WIDTH [31:0] $end
     $var wire 5 O! d0 [4:0] $end
     $var wire 5 P! d1 [4:0] $end
     $var wire 5 Q! d2 [4:0] $end
     $var wire 5 R! d3 [4:0] $end
     $var wire 5 S! d4 [4:0] $end
     $var wire 5 T! d5 [4:0] $end
     $var wire 5 R! d6 [4:0] $end
     $var wire 5 R! d7 [4:0] $end
     $var wire 3 <! s [2:0] $end
     $var wire 5 (! y [4:0] $end
    $upscope $end
   $upscope $end
   $scope module sd $end
    $var wire 7 ;! opD [6:0] $end
    $var wire 12 >! funct12D [11:0] $end
    $var wire 1 6! Ecall $end
    $var wire 1 7! Ebreak $end
   $upscope $end
  $upscope $end
  $scope module ext $end
   $var wire 25 D! instr [31:7] $end
   $var wire 3 '! immsrc [2:0] $end
   $var wire 32 5! immext [31:0] $end
  $upscope $end
  $scope module rf $end
   $var wire 5 # i_debug_addr [4:0] $end
   $var wire 32 E! o_debug_data [31:0] $end
   $var wire 1 H! clk $end
   $var wire 1 % rst $end
   $var wire 5 2! i_rd_addr_0 [4:0] $end
   $var wire 5 3! i_rd_addr_1 [4:0] $end
   $var wire 5 0 i_wr_addr [4:0] $end
   $var wire 1 / i_wr_en $end
   $var wire 32 1 i_wr_dat [31:0] $end
   $var wire 32 c o_rd_dat_0 [31:0] $end
   $var wire 32 d o_rd_dat_1 [31:0] $end
   $var wire 32 U! x00 [31:0] $end
   $var wire 32 e x01 [31:0] $end
   $var wire 32 f x02 [31:0] $end
   $var wire 32 g x03 [31:0] $end
   $var wire 32 h x04 [31:0] $end
   $var wire 32 i x05 [31:0] $end
   $var wire 32 j x06 [31:0] $end
   $var wire 32 k x07 [31:0] $end
   $var wire 32 l x08 [31:0] $end
   $var wire 32 m x09 [31:0] $end
   $var wire 32 n x10 [31:0] $end
   $var wire 32 o x11 [31:0] $end
   $var wire 32 p x12 [31:0] $end
   $var wire 32 q x13 [31:0] $end
   $var wire 32 r x14 [31:0] $end
   $var wire 32 s x15 [31:0] $end
   $var wire 32 t x16 [31:0] $end
   $var wire 32 u x17 [31:0] $end
   $var wire 32 v x18 [31:0] $end
   $var wire 32 w x19 [31:0] $end
   $var wire 32 x x20 [31:0] $end
   $var wire 32 y x21 [31:0] $end
   $var wire 32 z x22 [31:0] $end
   $var wire 32 { x23 [31:0] $end
   $var wire 32 | x24 [31:0] $end
   $var wire 32 } x25 [31:0] $end
   $var wire 32 ~ x26 [31:0] $end
   $var wire 32 !! x27 [31:0] $end
   $var wire 32 "! x28 [31:0] $end
   $var wire 32 #! x29 [31:0] $end
   $var wire 32 $! x30 [31:0] $end
   $var wire 32 %! x31 [31:0] $end
   $var wire 32 C i_wr_ens [31:0] $end
   $scope module r_x01 $end
    $var wire 32 V! WIDTH [31:0] $end
    $var wire 1 H! clk $end
    $var wire 1 % rst $end
    $var wire 1 D en $end
    $var wire 1 W! clr $end
    $var wire 32 1 d [31:0] $end
    $var wire 32 e q [31:0] $end
   $upscope $end
   $scope module r_x02 $end
    $var wire 32 V! WIDTH [31:0] $end
    $var wire 1 H! clk $end
    $var wire 1 % rst $end
    $var wire 1 E en $end
    $var wire 1 W! clr $end
    $var wire 32 1 d [31:0] $end
    $var wire 32 f q [31:0] $end
   $upscope $end
   $scope module r_x03 $end
    $var wire 32 V! WIDTH [31:0] $end
    $var wire 1 H! clk $end
    $var wire 1 % rst $end
    $var wire 1 F en $end
    $var wire 1 W! clr $end
    $var wire 32 1 d [31:0] $end
    $var wire 32 g q [31:0] $end
   $upscope $end
   $scope module r_x04 $end
    $var wire 32 V! WIDTH [31:0] $end
    $var wire 1 H! clk $end
    $var wire 1 % rst $end
    $var wire 1 G en $end
    $var wire 1 W! clr $end
    $var wire 32 1 d [31:0] $end
    $var wire 32 h q [31:0] $end
   $upscope $end
   $scope module r_x05 $end
    $var wire 32 V! WIDTH [31:0] $end
    $var wire 1 H! clk $end
    $var wire 1 % rst $end
    $var wire 1 H en $end
    $var wire 1 W! clr $end
    $var wire 32 1 d [31:0] $end
    $var wire 32 i q [31:0] $end
   $upscope $end
   $scope module r_x06 $end
    $var wire 32 V! WIDTH [31:0] $end
    $var wire 1 H! clk $end
    $var wire 1 % rst $end
    $var wire 1 I en $end
    $var wire 1 W! clr $end
    $var wire 32 1 d [31:0] $end
    $var wire 32 j q [31:0] $end
   $upscope $end
   $scope module r_x07 $end
    $var wire 32 V! WIDTH [31:0] $end
    $var wire 1 H! clk $end
    $var wire 1 % rst $end
    $var wire 1 J en $end
    $var wire 1 W! clr $end
    $var wire 32 1 d [31:0] $end
    $var wire 32 k q [31:0] $end
   $upscope $end
   $scope module r_x08 $end
    $var wire 32 V! WIDTH [31:0] $end
    $var wire 1 H! clk $end
    $var wire 1 % rst $end
    $var wire 1 K en $end
    $var wire 1 W! clr $end
    $var wire 32 1 d [31:0] $end
    $var wire 32 l q [31:0] $end
   $upscope $end
   $scope module r_x09 $end
    $var wire 32 V! WIDTH [31:0] $end
    $var wire 1 H! clk $end
    $var wire 1 % rst $end
    $var wire 1 L en $end
    $var wire 1 W! clr $end
    $var wire 32 1 d [31:0] $end
    $var wire 32 m q [31:0] $end
   $upscope $end
   $scope module r_x10 $end
    $var wire 32 V! WIDTH [31:0] $end
    $var wire 1 H! clk $end
    $var wire 1 % rst $end
    $var wire 1 M en $end
    $var wire 1 W! clr $end
    $var wire 32 1 d [31:0] $end
    $var wire 32 n q [31:0] $end
   $upscope $end
   $scope module r_x11 $end
    $var wire 32 V! WIDTH [31:0] $end
    $var wire 1 H! clk $end
    $var wire 1 % rst $end
    $var wire 1 N en $end
    $var wire 1 W! clr $end
    $var wire 32 1 d [31:0] $end
    $var wire 32 o q [31:0] $end
   $upscope $end
   $scope module r_x12 $end
    $var wire 32 V! WIDTH [31:0] $end
    $var wire 1 H! clk $end
    $var wire 1 % rst $end
    $var wire 1 O en $end
    $var wire 1 W! clr $end
    $var wire 32 1 d [31:0] $end
    $var wire 32 p q [31:0] $end
   $upscope $end
   $scope module r_x13 $end
    $var wire 32 V! WIDTH [31:0] $end
    $var wire 1 H! clk $end
    $var wire 1 % rst $end
    $var wire 1 P en $end
    $var wire 1 W! clr $end
    $var wire 32 1 d [31:0] $end
    $var wire 32 q q [31:0] $end
   $upscope $end
   $scope module r_x14 $end
    $var wire 32 V! WIDTH [31:0] $end
    $var wire 1 H! clk $end
    $var wire 1 % rst $end
    $var wire 1 Q en $end
    $var wire 1 W! clr $end
    $var wire 32 1 d [31:0] $end
    $var wire 32 r q [31:0] $end
   $upscope $end
   $scope module r_x15 $end
    $var wire 32 V! WIDTH [31:0] $end
    $var wire 1 H! clk $end
    $var wire 1 % rst $end
    $var wire 1 R en $end
    $var wire 1 W! clr $end
    $var wire 32 1 d [31:0] $end
    $var wire 32 s q [31:0] $end
   $upscope $end
   $scope module r_x16 $end
    $var wire 32 V! WIDTH [31:0] $end
    $var wire 1 H! clk $end
    $var wire 1 % rst $end
    $var wire 1 S en $end
    $var wire 1 W! clr $end
    $var wire 32 1 d [31:0] $end
    $var wire 32 t q [31:0] $end
   $upscope $end
   $scope module r_x17 $end
    $var wire 32 V! WIDTH [31:0] $end
    $var wire 1 H! clk $end
    $var wire 1 % rst $end
    $var wire 1 T en $end
    $var wire 1 W! clr $end
    $var wire 32 1 d [31:0] $end
    $var wire 32 u q [31:0] $end
   $upscope $end
   $scope module r_x18 $end
    $var wire 32 V! WIDTH [31:0] $end
    $var wire 1 H! clk $end
    $var wire 1 % rst $end
    $var wire 1 U en $end
    $var wire 1 W! clr $end
    $var wire 32 1 d [31:0] $end
    $var wire 32 v q [31:0] $end
   $upscope $end
   $scope module r_x19 $end
    $var wire 32 V! WIDTH [31:0] $end
    $var wire 1 H! clk $end
    $var wire 1 % rst $end
    $var wire 1 V en $end
    $var wire 1 W! clr $end
    $var wire 32 1 d [31:0] $end
    $var wire 32 w q [31:0] $end
   $upscope $end
   $scope module r_x20 $end
    $var wire 32 V! WIDTH [31:0] $end
    $var wire 1 H! clk $end
    $var wire 1 % rst $end
    $var wire 1 W en $end
    $var wire 1 W! clr $end
    $var wire 32 1 d [31:0] $end
    $var wire 32 x q [31:0] $end
   $upscope $end
   $scope module r_x21 $end
    $var wire 32 V! WIDTH [31:0] $end
    $var wire 1 H! clk $end
    $var wire 1 % rst $end
    $var wire 1 X en $end
    $var wire 1 W! clr $end
    $var wire 32 1 d [31:0] $end
    $var wire 32 y q [31:0] $end
   $upscope $end
   $scope module r_x22 $end
    $var wire 32 V! WIDTH [31:0] $end
    $var wire 1 H! clk $end
    $var wire 1 % rst $end
    $var wire 1 Y en $end
    $var wire 1 W! clr $end
    $var wire 32 1 d [31:0] $end
    $var wire 32 z q [31:0] $end
   $upscope $end
   $scope module r_x23 $end
    $var wire 32 V! WIDTH [31:0] $end
    $var wire 1 H! clk $end
    $var wire 1 % rst $end
    $var wire 1 Z en $end
    $var wire 1 W! clr $end
    $var wire 32 1 d [31:0] $end
    $var wire 32 { q [31:0] $end
   $upscope $end
   $scope module r_x24 $end
    $var wire 32 V! WIDTH [31:0] $end
    $var wire 1 H! clk $end
    $var wire 1 % rst $end
    $var wire 1 [ en $end
    $var wire 1 W! clr $end
    $var wire 32 1 d [31:0] $end
    $var wire 32 | q [31:0] $end
   $upscope $end
   $scope module r_x25 $end
    $var wire 32 V! WIDTH [31:0] $end
    $var wire 1 H! clk $end
    $var wire 1 % rst $end
    $var wire 1 \ en $end
    $var wire 1 W! clr $end
    $var wire 32 1 d [31:0] $end
    $var wire 32 } q [31:0] $end
   $upscope $end
   $scope module r_x26 $end
    $var wire 32 V! WIDTH [31:0] $end
    $var wire 1 H! clk $end
    $var wire 1 % rst $end
    $var wire 1 ] en $end
    $var wire 1 W! clr $end
    $var wire 32 1 d [31:0] $end
    $var wire 32 ~ q [31:0] $end
   $upscope $end
   $scope module r_x27 $end
    $var wire 32 V! WIDTH [31:0] $end
    $var wire 1 H! clk $end
    $var wire 1 % rst $end
    $var wire 1 ^ en $end
    $var wire 1 W! clr $end
    $var wire 32 1 d [31:0] $end
    $var wire 32 !! q [31:0] $end
   $upscope $end
   $scope module r_x28 $end
    $var wire 32 V! WIDTH [31:0] $end
    $var wire 1 H! clk $end
    $var wire 1 % rst $end
    $var wire 1 _ en $end
    $var wire 1 W! clr $end
    $var wire 32 1 d [31:0] $end
    $var wire 32 "! q [31:0] $end
   $upscope $end
   $scope module r_x29 $end
    $var wire 32 V! WIDTH [31:0] $end
    $var wire 1 H! clk $end
    $var wire 1 % rst $end
    $var wire 1 ` en $end
    $var wire 1 W! clr $end
    $var wire 32 1 d [31:0] $end
    $var wire 32 #! q [31:0] $end
   $upscope $end
   $scope module r_x30 $end
    $var wire 32 V! WIDTH [31:0] $end
    $var wire 1 H! clk $end
    $var wire 1 % rst $end
    $var wire 1 a en $end
    $var wire 1 W! clr $end
    $var wire 32 1 d [31:0] $end
    $var wire 32 $! q [31:0] $end
   $upscope $end
   $scope module r_x31 $end
    $var wire 32 V! WIDTH [31:0] $end
    $var wire 1 H! clk $end
    $var wire 1 % rst $end
    $var wire 1 b en $end
    $var wire 1 W! clr $end
    $var wire 32 1 d [31:0] $end
    $var wire 32 %! q [31:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00001 #
b00000000000000000000000000000000 $
1%
b00000000000000000000000000000000 &
b00000000000000000000000000000000 '
b00000000000000000000000000000100 (
0)
0*
0+
0,
0-
0.
0/
b00000 0
b00000000000000000000000000000000 1
b00000000000000000000000000000000 2
b00000000000000000000000000000000 3
b00 4
b0000 5
b00 6
b00000 7
b00000 8
b00000 9
b00000000000000000000000000000000 :
b00000 ;
b00000000000000000000000000000000 <
b00000000000000000000000000000000 =
b00000000000000000000000000000000 >
1?
b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100 @
b00000000000000000000000000000000 C
0D
0E
0F
0G
0H
0I
0J
0K
0L
0M
0N
0O
0P
0Q
0R
0S
0T
0U
0V
0W
0X
0Y
0Z
0[
0\
0]
0^
0_
0`
0a
0b
b00000000000000000000000000000000 c
b00000000000000000000000000000000 d
b00000000000000000000000000000000 e
b00000000000000000000000000000000 f
b00000000000000000000000000000000 g
b00000000000000000000000000000000 h
b00000000000000000000000000000000 i
b00000000000000000000000000000000 j
b00000000000000000000000000000000 k
b00000000000000000000000000000000 l
b00000000000000000000000000000000 m
b00000000000000000000000000000000 n
b00000000000000000000000000000000 o
b00000000000000000000000000000000 p
b00000000000000000000000000000000 q
b00000000000000000000000000000000 r
b00000000000000000000000000000000 s
b00000000000000000000000000000000 t
b00000000000000000000000000000000 u
b00000000000000000000000000000000 v
b00000000000000000000000000000000 w
b00000000000000000000000000000000 x
b00000000000000000000000000000000 y
b00000000000000000000000000000000 z
b00000000000000000000000000000000 {
b00000000000000000000000000000000 |
b00000000000000000000000000000000 }
b00000000000000000000000000000000 ~
b00000000000000000000000000000000 !!
b00000000000000000000000000000000 "!
b00000000000000000000000000000000 #!
b00000000000000000000000000000000 $!
b00000000000000000000000000000000 %!
b00000000000000000000000000000000 &!
b011 '!
b10000 (!
0)!
b11 *!
0+!
0,!
0-!
b0001 .!
b01 /!
b00000000000000000000000000000000 0!
b00000000000000000000000000000000 1!
b00000 2!
b00000 3!
b00000 4!
b00000000000000000000000000000000 5!
06!
07!
b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 8!
b0000000 ;!
b000 <!
0=!
b000000000000 >!
b01 ?!
0@!
0A!
0B!
b0011010110010 C!
b0000000000000000000000000 D!
b00000000000000000000000000000000 E!
1F!
0G!
0H!
b0000000 I!
b000 J!
0K!
b000000000000 L!
b00000000000000000000000001100000 M!
b00000000000000000000000000000101 N!
b10000 O!
b01000 P!
b00100 Q!
b00000 R!
b00010 S!
b00001 T!
b00000000000000000000000000000000 U!
b00000000000000000000000000100000 V!
0W!
#5000
0F!
1H!
#10000
b00000000000000000000000000000001 <
1F!
0H!
#15000
0F!
1H!
#20000
1F!
0H!
#21000
0%
b00000000101000001000000110110011 &
b11111111111111111111111111111111 2
b11111111111111111111111111111111 3
b11 4
b1111 5
b11 6
b11111 7
b11111 8
b00000000000000000000000000000010 <
b00000000000000000000000000000001 =
b000000001010000010000001101100110000000000000000000000000000000000000000000000000000000000000100 @
#25000
0F!
1H!
#30000
b00000000101000001000000110110011 &!
b111 '!
1)!
b00 *!
b0000 .!
b00 /!
b00000000000000000000000000000100 1!
b00001 2!
b01010 3!
b00011 4!
b01000100110110010000011100100101 5!
b000000001010000010000001101100110000000000000000000000000000000000000000000000000000000000000100 8!
b0110011 ;!
b000000001010 >!
b10 ?!
1@!
b1111000000100 C!
b0000000010100000100000011 D!
1F!
0H!
#31000
b00000001101100001000001000010011 &
b00000000000000000000000000000100 '
b00000000000000000000000000001000 (
b00000000000000000000000000000000 3
b00000 8
b11111 9
b11111111111111111111111111111111 :
b00000000000000000000000000000011 <
b00000000000000000000000000000010 =
b000000011011000010000010000100110000000000000000000000000000010000000000000000000000000000001000 @
#35000
0F!
1H!
#40000
b00000001101100001000001000010011 &!
b000 '!
b01 /!
b00000000000000000000000000000100 0!
b00000000000000000000000000001000 1!
b11011 3!
b00100 4!
b00000000000000000000000000011011 5!
b000000011011000010000010000100110000000000000000000000000000010000000000000000000000000000001000 8!
b0010011 ;!
b000000011011 >!
0@!
b1000010000100 C!
b0000000110110000100000100 D!
1F!
0H!
#41000
b00000001001000100010000010000011 &
b00000000000000000000000000001000 '
b00000000000000000000000000001100 (
b11111 ;
b00000000000000000000000000000100 <
b00000000000000000000000000000011 =
b000000010010001000100000100000110000000000000000000000000000100000000000000000000000000000001100 @
#45000
0F!
1H!
#50000
b00000001001000100010000010000011 &!
b00100 (!
b01 *!
b00000000000000000000000000001000 0!
b00000000000000000000000000001100 1!
b00100 2!
b10010 3!
b00001 4!
b00000000000000000000000000010010 5!
b000000010010001000100000100000110000000000000000000000000000100000000000000000000000000000001100 8!
b0000011 ;!
b010 <!
b000000010010 >!
b00 ?!
b1000010010000 C!
b0000000100100010001000001 D!
1F!
0H!
#51000
b00110110010000001010000110100011 &
b00000000000000000000000000001100 '
b00000000000000000000000000010000 (
b00000000000000000000000000000000 2
b00 4
b11111 8
b00000 9
b00000000000000000000000000000101 <
b00000000000000000000000000000100 =
b001101100100000010100001101000110000000000000000000000000000110000000000000000000000000000010000 @
#55000
0F!
1H!
#60000
b00110110010000001010000110100011 &!
b001 '!
0)!
b00 *!
1+!
b00000000000000000000000000001100 0!
b00000000000000000000000000010000 1!
b00001 2!
b00100 3!
b00011 4!
b00000000000000000000001101100011 5!
b001101100100000010100001101000110000000000000000000000000000110000000000000000000000000000010000 8!
b0100011 ;!
b001101100100 >!
1@!
b0001011000000 C!
b0011011001000000101000011 D!
1F!
0H!
#61000
b00000000000000100000010001100011 &
b00000000000000000000000000010000 '
b00000000000000000000000000010100 (
b11 4
b00000 ;
b00000000000000000000000000000110 <
b00000000000000000000000000000101 =
b000000000000001000000100011000110000000000000000000000000001000000000000000000000000000000010100 @
#65000
0F!
1H!
#70000
b00000000000000100000010001100011 &!
b010 '!
b10000 (!
0+!
1-!
b0001 .!
b00 /!
b00000000000000000000000000010000 0!
b00000000000000000000000000010100 1!
b00100 2!
b00000 3!
b01000 4!
b00000000000000000000000000001000 5!
b000000000000001000000100011000110000000000000000000000000001000000000000000000000000000000010100 8!
b1100011 ;!
b000 <!
b000000000000 >!
b01 ?!
b0010000001010 C!
b0000000000000010000001000 D!
1F!
0H!
#71000
b00000000100000000000000111101111 &
b00000000000000000000000000010100 '
b00000000000000000000000000011000 (
b00000 7
b00000 8
b11111 9
b00000000000000000000000000000111 <
b00000000000000000000000000000110 =
b000000001000000000000001111011110000000000000000000000000001010000000000000000000000000000011000 @
#75000
0F!
1H!
#80000
b00000000100000000000000111101111 &!
b011 '!
1)!
b10 *!
1,!
0-!
b0000 .!
b00000000000000000000000000010100 0!
b00000000000000000000000000011000 1!
b00000 2!
b01000 3!
b00011 4!
b000000001000000000000001111011110000000000000000000000000001010000000000000000000000000000011000 8!
b1101111 ;!
b000000001000 >!
b00 ?!
b1011000100001 C!
b0000000010000000000000011 D!
1F!
0H!
#81000
b00000000000000000000000001110011 &
b00000000000000000000000000011100 '
b00000000000000000000000000100000 (
b11111111111111111111111111111111 2
b11111111111111111111111111111111 3
b11111 7
b11111 8
b00000000000000000000000000001000 <
b00000000000000000000000000000111 =
b000000000000000000000000011100110000000000000000000000000001110000000000000000000000000000100000 @
#85000
0F!
1H!
#90000
b00000000000000000000000001110011 &!
b100 '!
0)!
b00 *!
0,!
b00000000000000000000000000011100 0!
b00000000000000000000000000100000 1!
b00000 3!
b00000 4!
b00000000000000000000000000000000 5!
16!
b000000000000000000000000011100110000000000000000000000000001110000000000000000000000000000100000 8!
b1110011 ;!
b000000000000 >!
b0100000000000 C!
b0000000000000000000000000 D!
1F!
0H!
#91000
b00000000000000000000000000001000 =
